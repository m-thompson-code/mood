import { Component, Directive, Input, Pipe, PipeTransform } from '@angular/core';
import { ComponentFixture, TestBed } from '@angular/core/testing';
import { ReactiveFormsModule } from '@angular/forms';
import { RouterTestingModule } from '@angular/router/testing';
import { of } from 'rxjs';
import { AlertService } from '../alert.service';

import { MyFormComponent } from './my-form.component';

@Pipe({
    name: 'excited',
})
class MockExcitedPipe implements PipeTransform {
    transform(value: string): string {
        return value;
    }
}

@Component({
    selector: 'app-input',
})
class MockAppInput {
    @Input() value!: string;
}

@Component({
    selector: 'app-button',
})
class MockAppButton {
}

const mockAlertService = {
    test: () => of('moocow'),
} as AlertService;

@Directive({
    selector: '[appUnderline]',
})
class MockUnderlineDirective {
    @Input() appUnderline?: string;
}

describe('MyFormComponent', () => {
    let component: MyFormComponent;
    let fixture: ComponentFixture<MyFormComponent>;
    
    beforeEach(async () => {
        await TestBed.configureTestingModule({
            declarations: [ MyFormComponent, MockExcitedPipe, MockAppInput, MockAppButton, MockUnderlineDirective ],
            imports: [ RouterTestingModule, ReactiveFormsModule ],
            providers: [ {
                provide: AlertService, useValue: mockAlertService,
            } ]
        }).compileComponents();
    });

    beforeEach(() => {
        fixture = TestBed.createComponent(MyFormComponent);
        component = fixture.componentInstance;
        fixture.detectChanges();
    });

    it('should create', () => {
        expect(component).toBeTruthy();
    });
});
